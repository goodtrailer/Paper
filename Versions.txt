Format: Major.Minor.Patch
. : Self-explanatory
+ : Done
- : To do
/ : Cancelled (or put on hold)

Note: this document is more of a todo-list than a changelog, because my commits are extremely inconsistent. This is a reference for the tags on the GitHub repository.

0. Alpha
	0. Board generation
		Unrecorded
	1. Units
		Unrecorded
	2. Multiplayer networking
		0. Groundwork
			Unrecorded
		1. UI
			Unrecorded
		2. Units part 1
			Unrecorded
		3. Bug fixes and major restructuring of code and blueprints
			+ Created unit blueprint to derive from unit C++ class
			+ Optimization of integer types and strings into UEnums
		4. Basic replication of unit movement
			+ Unchecked teleportation of units with left and right click
			+ Squashed tens of fatal bugs involving networking and pointers that resulted in numerous crashes in release packages through major restructuring of code.
	3. Unit movement
		0. Select and hover overlays
			+ Assets for select and hover overlays, fixed extreme FPS lag from faulty lighting
			+ Converted all C++ classes but BoardGenerator to blueprints
			+ Implemented client side select and hover overlays
		1. Pathfinding
			+ .
			+ Updated versioning again, to be more similar to semantic versioning
		2. Pathfinding graphics
			+ Blue overlays to see where is movable
			+ Arrow to cursor
			+ Completely reworked the FCardinal struct
		3. Checked unit movement
			+ Subtracting from energy when moving
			+ Restoring energy at the beginning of turn
			+ Changed how Unit stats are handled (EditAnywhere insead of BlueprintReadWrite)
	4. Unit attacking
		0. Attack graphics
			+ Attackable overlays
			+ Attack overlay (target/crosshair)
		1. Attack functions
			+ Dealing damage
			+ Unit deaths
		2. Overriding reachable range
			+ Overridable attack ranges using virtual
			+ <>/[] default range types
	5. UI and miscellaneous
		0. Gold
			+ .
			+ Easily modifiable starting/passive income and starting gold
		1. Basic UI
			+ Colored based on team
			+ Shows gold
			+ No longer updates per tick
			+ Button styles
		2. Miscellaneous
			+ localhost a valid alias for 127.0.0.1
			+ FPS counter
			+ Can press ENTER to join instead of clicking join
		3. More UI functionality
			+ Selected unit icon
			+ Selected unit stats
			+ Selected unit action buttons
			+ Info buttons in shop and selected unit panel
	6. Bases and win conditions
		0. Castles
			+ Synced hp
			+ Redo attacks/deaths to be overridable by units
		1. Victory/defeat screen
			+ .
			+ Cool blurred background
			+ Allow changing team to spectator
	7. Online
		0. Anti-client-side-cheating/modding (not anti-cheating/modding for hosts, because they're hosts)
			+ Make a lot of server functions into normal functions, so that only the server can call it with any meaningful impact
			+ Do calculations and verifications in server RPCs, such that it is impossible to hack the calculations as a client
			+ Remove server RPCs from GameState/PlayerState and add server RPCs to PlayerController
		1. Lobby screen
			+ Lobby screen before game starts showing players and teams
			+ Joining a game that's already in progress
			+ One player per team only
			+ Choose team via dropdown box instead of an incremental button
			+ Text chat (all because ue4 literally has 0 functionality (actually for real, i'm not kidding) for logging in shipping builds. what the fuck.)
		/ EOS server list
			Reason for cancellation: though EOS works for getting external IP addresses of hosts online, there's no way in UE4 to connect to
				those hosts (due to NAT) unless UE4 gets actual IPv6 support or Epic implements an EOS online subsystem like they did with 
				Steamworks. Otherwise, Paper would need a dedicated server for UDP hole punching, or it would have to be put onto Steam to
				gain access to Steamworks, but both of those options cost a decent sum of money.
			/ Source-engine style server list showing all games online
			/ Runs on Epic Online Services sessions interface, so that online is up 24/7
			/ No more direct IP connections needed (but the option is still available)
		2. Choosing map as host (using stb_image because ue4 doesn't have an image reading library ?????)
			.
			+ Built-in map selector
			+ Select file from disk (using portable-file-dialog single-header-lib)
			+ New map 2p_koth
			+ Support for 6 teams in custom maps (green, red, purple, brown, white, black)
			+ Map making palette menu
			+ New map 4p_mountain
			+ New map 4p_mountain_1
	8. Units part 2
		0. Miners
		1. Castles
			- New models (instead of flipped wall asset)
		2. Mines
			- New icon
		2. Knight
			- Add animation
1. Release
	0. Polish, bug fixes, and housekeeping
		0. ESCAPE menu for settings
		1. Top bar
			- FPS counter
			- CLIENT/HOST
			- Version number
		2. Polish
			- Rich text for passive text
			- Visuals on attacking (i.e. a little red bubble or something)
			- Rebindable hotkeys + optional RTS movement styles
			- Optional MSI (ZIP still included alongside it)
			- Select which spawn to spawn units at
			- Show HP numbers for units within certain distance of cursor or show for all (switch option)
			- Death particle effects (animation is out of scope)
			- Separate mouse up and mouse down events (to prevent visual bug where selecting ally unit while attacking then causes the movement
			overlay to reverse inputs, hard to explain)
			- US delay timer that scales based off unit count:
				let m represent the main time in seconds
				let t represent the number of teams
				let d represent the delay in seconds
				let u represent the number of units a player controls
				m = 120 + 12t
				d = 10u + 25